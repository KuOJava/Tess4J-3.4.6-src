import java.awt.Component;
import java.awt.Container;
import java.awt.Font;
import java.awt.GraphicsEnvironment;
import java.awt.GridBagConstraints;
import java.awt.GridBagLayout;
import java.awt.Label;
import java.awt.Point;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.WindowEvent;
import java.awt.event.WindowListener;
import java.io.IOException;

import javax.security.auth.login.CredentialExpiredException;
import javax.swing.JButton;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JTextArea;
import javax.swing.JTextField;
import javax.swing.SwingConstants;

//这是主函数，图形用户界面编写在这里
public class Main {
	private JTextField inputPath;
	private JButton choosePath;
	private JButton confirm;
	private JLabel situation;
	public static JTextField showMessage;
	private JLabel jumpToExcel;
	private JButton clickToCopy;

	public Main() {
		// 创建一个框架作为顶层容器
		// JFrame.setDefaultLookAndFeelDecorated(true);
		JFrame f = new JFrame("工商图片识别系统");
		// f.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		// 获取框架中的内容面板
		Container contentPane = f.getContentPane();
		// 设置网格布局
		contentPane.setLayout(new GridBagLayout());
		// 使用网格布局约束器
		GridBagConstraints c = new GridBagConstraints();
		// 界面设计,根据需求文档中提供的图形界面得
		// '输入路径'文本框：处于第1行，占3列;'选择路径'按钮：处于第1行，第4列；'确定'按钮：处于第1行，第5列
		// '识别情况'提示框：处于第2行，占所有列
		// 显示消息的文本框：处于第3,4行，占所有列
		// '点击进入输出的Excel的根目录'超链接：处于第5行，占3列；'点击复制文件'按钮：处于第5行，占两列

		// '输入路径'的文本框
		inputPath = new JTextField(1);
		inputPath.setText("././b");
		inputPath.setFont(new Font("宋体", Font.PLAIN, 80));
		inputPath.setHorizontalAlignment(JTextField.CENTER);
		// 第一行第一列开始
		c.gridx = 0;
		c.gridy = 0;
		// 跨3列
		c.gridwidth = 3;
		c.gridheight = 1;
		c.fill = GridBagConstraints.BOTH;
		c.weightx = 3;
		c.weighty = 1;
		// 设置点击事件

		// 根据c的设置添加输入框
		contentPane.add(inputPath, c);

		// '选择路径'按钮
		choosePath = new JButton("选择路径");
		choosePath.setFont(new Font("宋体", Font.PLAIN, 50));
		// 选择路径点击事件
		choosePath.addActionListener(new ActionListener() {

			@Override
			public void actionPerformed(ActionEvent e) {
				JFileChooser chooser = new JFileChooser();
				chooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
				Component parent = null;
				int returnVal = chooser.showOpenDialog(parent);
				if (returnVal == JFileChooser.APPROVE_OPTION) {
					inputPath.setText(chooser.getSelectedFile().getAbsolutePath());
				}
			}
		});
		// 放在第一行第四列
		c.gridx = 3;
		c.gridy = 0;
		c.gridwidth = 1;
		c.weightx = 1;
		c.weighty = 1;
		// c.gridheight=1;----不用赋值
		contentPane.add(choosePath, c);
		// '确定'按钮
		confirm = new JButton("确定");
		confirm.setFont(new Font("宋体", Font.PLAIN, 50));
		// 确定按钮的点击事件
		confirm.addActionListener(new ActionListener() {

			@Override
			public void actionPerformed(ActionEvent e) {
				// 点击后获取路径读取内容
				Long start = System.nanoTime();
				String path = inputPath.getText();
				if (path.equals("")) {
					showMessage.setText("你没有输入任何路径\n");
				} else {
					showMessage.setText("正在识别。。。。。。");
					Thread thread =new Thread(new Runnable() {
						@Override
						public void run() {
							String message = "";
							try {
								message = Tess.find(path, Tess.depth);
							} catch (IOException e) {
								e.printStackTrace();
							}
							PoiExcel poiexcel = new PoiExcel();
							poiexcel.poi(Tess.temp1, Tess.temp2);// 生成Excel表格
							showMessage.setText(message);
							if(message.equals("完成")) {
								Long end = System.nanoTime();
								System.out.println("时间："+(end-start)+"纳秒");
								System.out.println("速度："+(end-start)/Tess.count+"纳秒/张"+"\t或\t"+(end-start)/Tess.count/1000000+"毫秒/张");
							}
						}
					});
					thread.start();
				}
			}
		});
		c.gridx = 4;
		// c.gridy=4;----不用赋值
		// c.gridwidth=1;----不用赋值
		// c.gridheight=1;----不用赋值
		c.weightx = 1;
		c.weighty = 1;
		contentPane.add(confirm, c);

		// '识别情况:'提示框
		situation = new JLabel("识别情况:");
		situation.setFont(new Font("宋体", Font.PLAIN, 50));
		situation.setHorizontalAlignment(SwingConstants.CENTER);
		c.gridx = 0;
		c.gridy = 1;
		c.weightx = 1;
		c.weighty = 1;
		c.gridwidth=5;
		c.gridheight=1;
		contentPane.add(situation, c);

		// '显示消息的框'
		showMessage = new JTextField("");
		showMessage.setFont(new Font("宋体", Font.PLAIN, 50));
		showMessage.setHorizontalAlignment(JTextField.CENTER);
		// c.gridx=0;
		c.gridy = 2;
		c.gridwidth = 5;
		c.gridheight = 2;
		c.weightx = 5;
		c.weighty = 2;
		contentPane.add(showMessage, c);

		// '点击进入输出的Excel的根目录'
		jumpToExcel = new JLabel("点击打开输出的Excel:");
		jumpToExcel.setFont(new Font("宋体", Font.PLAIN, 50));
		jumpToExcel.setHorizontalAlignment(SwingConstants.CENTER);
		// 点击事件
		c.gridx = 0;
		c.gridy = 4;
		c.gridwidth = 3;
		c.gridheight = 1;
		c.weightx = 3;
		c.weighty = 1;
		contentPane.add(jumpToExcel, c);

		// '点击复制文件'
		clickToCopy = new JButton("打开文件");
		clickToCopy.setFont(new Font("宋体", Font.PLAIN, 50));
		// 打开文件
		clickToCopy.addActionListener(new ActionListener() {

			@Override
			public void actionPerformed(ActionEvent e) {
				StartExcel startexcel = new StartExcel();
				startexcel.start();// 自动打开Excel表格
			}
		});
		c.gridx = 3;
		c.gridwidth = 2;
		c.weightx = 2;
		c.weighty = 1;
		contentPane.add(clickToCopy, c);

		// 显示窗口
		f.pack();
		//居中显示
		int width =1200;
		int height = 900;
		Point point = GraphicsEnvironment.getLocalGraphicsEnvironment().getCenterPoint();
		f.setBounds(point.x-width/2, point.y-height/2, width, height);
		//f.setSize(1200, 900);
		f.setVisible(true);
		// 设置窗口的关闭
		f.addWindowListener(new WindowListener() {

			@Override
			public void windowOpened(WindowEvent e) {
				// TODO Auto-generated method stub

			}

			@Override
			public void windowIconified(WindowEvent e) {
				// TODO Auto-generated method stub

			}

			@Override
			public void windowDeiconified(WindowEvent e) {
				// TODO Auto-generated method stub

			}

			@Override
			public void windowDeactivated(WindowEvent e) {
				// TODO Auto-generated method stub

			}

			@Override
			public void windowClosing(WindowEvent e) {
				// TODO Auto-generated method stub
				System.exit(0);
			}

			@Override
			public void windowClosed(WindowEvent e) {
				// TODO Auto-generated method stub

			}

			@Override
			public void windowActivated(WindowEvent e) {
				// TODO Auto-generated method stub

			}
		});
	}

	public static void main(String[] args) {
		new Main();
	}
}
